openapi: 3.0.3

info:
  title: CampeonatoApi
  description: API para gerenciamento do campeonato brasileiro
  version: 1.0.0

tags:
  - name: Times
    description: Tudo sobre os times

  - name: Jogadores
    description: Tudo sobre os jogadores

  - name: Torneios
    description: Tudo sobre torneios

  - name: Partidas
    description: Tudo sobre as partidas de cada torneio

paths:
  /times:
    post:
      tags:
        - Times
      summary: Cadastrar um time
      description: Registra um novo time
      operationId: postTime
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimeApiRequest'
      responses:
        '201':
          description: Criado
        '422':
          description: Erro
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorApiResponse'
        '500':
          description: Erro interno
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorApiResponse'

    get:
      tags:
        - Times
      summary: Buscar todos os times
      description: Retorna uma lista de times
      operationId: getAllTimes
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TimeApiResponse'
        '400':
          description: Id inválido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorApiResponse'
        '404':
          description: Id não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorApiResponse'

  /times/{id}:
    get:
      tags:
        - Times
      summary: Busca um time for id
      description: Retorna as informações de um time
      operationId: getTimeById
      parameters:
        - $ref: '#/components/parameters/idParam'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeApiResponse'
        '400':
          description: Id inválido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorApiResponse'
        '404':
          description: Id não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorApiResponse'

    put:
      tags:
        - Times
      summary: Alterar um time
      description: Modifica as informações de um time
      operationId: putTime
      parameters:
        - $ref: '#/components/parameters/idParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimeApiRequest'
      responses:
        '204':
          description: Operação bem sucedida
        '400':
          description: Id inválido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorApiResponse'
        '404':
          description: Id não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorApiResponse'

    delete:
      tags:
        - Times
      summary: Deleta um jogador
      description: Exclui um jogador da base de dados
      operationId: deleteTimeById
      parameters:
        - $ref: '#/components/parameters/idParam'
      responses:
        '200':
          description: Deletado com sucesso
        '400':
          description: Id inválido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorApiResponse'
        '404':
          description: Id não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorApiResponse'

  /jogadores:
    post:
      tags:
        - Jogadores
      summary: Cadastrar um jogador
      description: Registra um novo jogador
      operationId: postJogador
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JogadorApiRequest'
      responses:
        '201':
          description: Created
        '422':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorApiResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorApiResponse'

    get:
      tags:
        - Jogadores
      summary: Buscar todos os jogadores
      description: Retorna uma lista de jogadores
      operationId: getAllJogadores
      responses:
        '200':
          description: Operação bem sucedida
          content:
            application/json:
              schema:
                type: array
                items:
                  - $ref: '#/components/schemas/JogadorApiResponse'
        '400':
          description: Id inválido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorApiResponse'
        '404':
          description: Id não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorApiResponse'

  /jogadores/{id}:
    get:
      tags:
        - Jogadores
      summary: Busca um jogador for id
      description: Retorna as informações de um jogador
      operationId: getJogadorById
      parameters:
        - $ref: '#/components/parameters/idParam'
      responses:
        '200':
          description: Operação bem sucedida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JogadorApiResponse'
        '400':
          description: Id inválido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorApiResponse'
        '404':
          description: Id não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorApiResponse'

    put:
      tags:
        - Jogadores
      summary: Alterar um jogador
      description: Modifica as informações de um jogador
      operationId: putJogador
      parameters:
        - $ref: '#/components/parameters/idParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JogadorApiRequest'
      responses:
        '204':
          description: Operação bem sucedida
        '400':
          description: Id inválido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorApiResponse'
        '404':
          description: Id não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorApiResponse'

    delete:
      tags:
        - Jogadores
      summary: Deleta um time
      description: Exclui um time da base de dados
      operationId: deleteJogadorById
      parameters:
        - $ref: '#/components/parameters/idParam'
      responses:
        '200':
          description: Deletado com sucesso
        '400':
          description: Id inválido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorApiResponse'
        '404':
          description: Id não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorApiResponse'

  /transferencias:
    post:
      tags:
        - Transferencias
      summary: Cadastra uma tranferência de jogador
      description: Registra uma nova transferência de jogador
      operationId: postTransferencia
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransferenciaApiRequest'
      responses:
        '201':
          description: Created
        '422':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorApiResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorApiResponse'

  /torneios:
    post:
      tags:
        - Torneios
      summary: Cadastrar um torneio
      description: Registra um novo torneio
      operationId: postTorneio
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TorneioApiRequest'
      responses:
        '201':
          description: Created
        '422':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorApiResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorApiResponse'

    get:
      tags:
        - Torneios
      summary: Buscar todos os torneios
      description: Retorna uma lista de torneios
      operationId: getAllTorneios
      responses:
        '200':
          description: Operação bem sucedida
          content:
            application/json:
              schema:
                type: array
                items:
                  - $ref: '#/components/schemas/TorneioApiResponse'
        '400':
          description: Id inválido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorApiResponse'
        '404':
          description: Id não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorApiResponse'

  /torneios/{id}:
    get:
      tags:
        - Torneios
      summary: Busca um torneio por id
      description: Retorna as informações de um torneio
      operationId: getTorneioById
      parameters:
        - $ref: '#/components/parameters/idParam'
      responses:
        '200':
          description: Operação bem sucedida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TorneioApiResponse'
        '400':
          description: Id inválido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorApiResponse'
        '404':
          description: Id não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorApiResponse'

    put:
      tags:
        - Torneios
      summary: Alterar um torneio
      description: Modifica as informações de um torneio
      operationId: putTorneioById
      parameters:
        - $ref: '#/components/parameters/idParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TorneioApiRequest'
      responses:
        '204':
          description: Operação bem sucedida
        '400':
          description: Id inválido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorApiResponse'
        '404':
          description: Id não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorApiResponse'

  /partidas:
    post:
      tags:
        - Partidas
      summary: Cadastrar uma partida
      description: Registra uma nova partida
      operationId: postPartida
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartidaApiRequest'
      responses:
        '201':
          description: Created
        '422':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorApiResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorApiResponse'

    get:
      tags:
        - Partidas
      summary: Buscar todas as partidas
      description: Retorna uma lista de partidas
      operationId: getAllPartidas
      responses:
        '200':
          description: Operação bem sucedida
          content:
            application/json:
              schema:
                type: array
                items:
                  - $ref: '#/components/schemas/PartidaApiResponse'
        '400':
          description: Id inválido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorApiResponse'
        '404':
          description: Id não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorApiResponse'

  /torneios/{idTorneio}/partidas/{idPartida}/eventos/inicio:
    post:
      tags:
        - Partidas
      summary: Cadastrar um início de partida
      description: Registra o início de uma nova partida
      operationId: postInicio
      parameters:
        - in: path
          required: true
          name: idTorneio
          schema:
            type: integer
            format: int64
        - in: path
          required: true
          name: idPartida
          schema:
            type: integer
            format: int64
        - in: header
          required: true
          name: dataInicio
          schema:
            type: string
            description: Data e hora do início da partida
            example: 10/04/2022 21:00
      responses:
        '201':
          description: Created
        '422':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorApiResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorApiResponse'

  /torneios/{idTorneio}/partidas/{idPartida}/eventos/gol:
    post:
      tags:
        - Partidas
      summary: Cadastrar um gol
      description: Registra um novo gol
      operationId: postGol
      parameters:
        - in: path
          required: true
          name: idTorneio
          schema:
            type: integer
            format: int64
        - in: path
          required: true
          name: idPartida
          schema:
            type: integer
            format: int64
        - in: header
          required: true
          name: minuto
          schema:
            type: integer
            description: Minuto em que o gol foi feito
            example: 34
        - in: header
          required: true
          name: idJogador
          schema:
            type: integer
            format: int64
      responses:
        '201':
          description: Created
        '422':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorApiResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorApiResponse'

  /torneios/{idTorneio}/partidas/{idPartida}/eventos/acrescimo:
    post:
      tags:
        - Partidas
      summary: Cadastrar um acrescimo
      description: Registra um novo acrescimo
      operationId: postAcrescimo
      parameters:
        - in: path
          required: true
          name: idTorneio
          schema:
            type: integer
            format: int64
        - in: path
          required: true
          name: idPartida
          schema:
            type: integer
            format: int64
        - in: header
          required: true
          name: tempo
          description: Informa em qual tempo (1 ou 2) foi efetuado o acréscimo
          schema:
            type: integer
        - in: header
          required: true
          name: minutos
          description: Informa quantos minutos serão acrescidos
          example: 4
          schema:
            type: integer
      responses:
        '201':
          description: Created
        '422':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorApiResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorApiResponse'

  /torneios/{idTorneio}/partidas/{idPartida}/eventos/substituicao:
    post:
      tags:
        - Partidas
      summary: Cadastrar uma substituicao
      description: Registra uma nova substituicao
      operationId: postSubstituicao
      parameters:
        - in: path
          required: true
          name: idTorneio
          schema:
            type: integer
            format: int64
        - in: path
          required: true
          name: idPartida
          schema:
            type: integer
            format: int64
        - in: header
          required: true
          name: idJogadorSubstituido
          schema:
            type: integer
            format: int64
        - in: header
          required: true
          name: idJogadorSubstituto
          schema:
            type: integer
            format: int64
        - in: header
          required: true
          name: minuto
          schema:
            type: integer
            description: Minuto em que a substituicao foi feita
            example: 34
      responses:
        '201':
          description: Created
        '422':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorApiResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorApiResponse'

  /torneios/{idTorneio}/partidas/{idPartida}/eventos/advertencia:
    post:
      tags:
        - Partidas
      summary: Cadastrar uma advertencia
      description: Registra uma nova advertencia
      operationId: postAdvertencia
      parameters:
        - in: path
          required: true
          name: idTorneio
          schema:
            type: integer
            format: int64
        - in: path
          required: true
          name: idPartida
          schema:
            type: integer
            format: int64
        - in: header
          required: true
          name: tipo
          schema:
            type: string
            enum: [ AMARELO, VERMELHO ]
        - in: header
          required: true
          name: idJogador
          schema:
            type: integer
            format: int64
      responses:
        '201':
          description: Created
        '422':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorApiResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorApiResponse'

  /torneios/{idTorneio}/partidas/{idPartida}/eventos/fim:
    post:
      tags:
        - Partidas
      summary: Cadastrar o fim da partida
      description: Registra o fim da partida
      operationId: postFim
      parameters:
        - in: path
          required: true
          name: idTorneio
          schema:
            type: integer
            format: int64
        - in: path
          required: true
          name: idPartida
          schema:
            type: integer
            format: int64
        - in: header
          required: true
          name: dataFim
          schema:
            type: string
            description: Data e hora do fim da partida
            example: 10/04/2022 23:00
      responses:
        '201':
          description: Created
        '422':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorApiResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorApiResponse'

components:
  parameters:
    idParam:
      name: id
      in: path
      description: Número de identificação
      example: 4
      required: true
      schema:
        type: integer
        format: int64

  schemas:
    ErrorApiResponse:
      type: object
      properties:
        codigo:
          type: string
          example: '[CBXXX001]'
        mensagem:
          type: string
          example: Erro genérico
        detalhe:
          type: string
          example: Detalhe genérico

    TimeApiRequest:
      required: [ nome, localidade ]
      type: object
      properties:
        nome:
          type: string
          example: Clube Atlético Mineiro
        localidade:
          $ref: '#/components/schemas/Localidade'

    TimeApiResponse:
      $ref: '#/components/schemas/Time'

    JogadorApiRequest:
      type: object
      required: [ nome, dataNascimento, nacionalidade, idTime ]
      properties:
        nome:
          type: string
          example: Neymar Jr.
        dataNascimento:
          type: string
          example: 05/02/1992
        nacionalidade:
          type: string
          example: Brasileiro
        idTime:
          type: integer
          format: int64
          example: 1

    JogadorApiResponse:
      $ref: '#/components/schemas/Jogador'

    Jogador:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        nome:
          type: string
          example: Neymar Jr.
        dataNascimento:
          type: string
          example: 05/02/1992
        nacionalidade:
          type: string
          example: Brasileiro
        time:
          $ref: '#/components/schemas/Time'

    TransferenciaApiRequest:
      type: object
      required: [ idTimeOrigem, idTimeDestino, idJogador ]
      properties:
        idTimeOrigem:
          type: integer
          format: int64
          description: Id do time de origem
          example: 10
        idTimeDestino:
          type: integer
          format: int64
          description: Id do time de destino
          example: 13
        idJogador:
          type: integer
          format: int64
          description: Id do jogador a ser transferido
          example: 23

    Time:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        nome:
          type: string
          example: Clube Atlético Mineiro
        localidade:
          $ref: '#/components/schemas/Localidade'

    Localidade:
      type: string
      enum: [ AC,AL,AP,AM,BA,CE,DF,ES,GO,MA,MT,MS,MG,PA,PB,PR,PE,PI,RJ,RN,RS,RO,RR,SC,SP,SE,TO ]
      description: Estados do Brasil

    TorneioApiRequest:
      type: object
      required: [ dataInicio, dataFim ]
      properties:
        dataInicio:
          type: string
          example: 10/04/2022
          description: Data do início do torneio
        dataFim:
          type: string
          example: 13/11/2022
          description: Data do fim do torneio
        idTimeCampeao:
          type: integer
          format: int64
        idCraque:
          type: integer
          format: int64

    TorneioApiResponse:
      $ref: '#/components/schemas/Torneio'

    Torneio:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Id do torneio
          example: 1
        dataInicio:
          type: string
          example: 10/04/2022
          description: Data do início do torneio
        dataFim:
          type: string
          example: 13/11/2022
          description: Data do fim do torneio
        timeCampeao:
          $ref: '#/components/schemas/Time'
        craque:
          $ref: '#/components/schemas/Jogador'

    PartidaApiRequest:
      type: object
      required: [ idTorneio, dataRealizacao, idTimeMandante, idTimeVisitante ]
      properties:
        idTorneio:
          type: integer
          format: int64
        dataRealizacao:
          type: string
          example: 10/04/2022 21:00
        idTimeMandante:
          type: integer
          format: int64
        idTimeVisitante:
          type: integer
          format: int64

    PartidaApiResponse:
      $ref: '#/components/schemas/Partida'

    Partida:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Id da partida
          example: 1
        dataRealizacao:
          type: string
          example: 10/04/2022 21:00
        timeMandante:
          $ref: '#/components/schemas/Time'
        timeVisitante:
          $ref: '#/components/schemas/Time'
        eventos:
          type: array
          items:
            $ref: '#/components/schemas/Evento'

    Evento:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Id da partida
          example: 1
        data:
          type: string
          example: 10/04/2022 21:00
        tempo:
          type: integer
          description: 1 ou 2 tempo
          example: 1
        minutos:
          type: integer
          description: Minuto da partida que o evento ocorreu ou quantidade de minutos acrescidos
          example: 35
        tipo:
          $ref: '#/components/schemas/TipoEvento'
        gravidade:
          $ref: '#/components/schemas/TipoAdvertencia'
        jogador:
          $ref: '#/components/schemas/Jogador'
        jogadorSubstituto:
          $ref: '#/components/schemas/Jogador'
        partida:
          $ref: '#/components/schemas/Partida'

    TipoEvento:
      type: string
      enum: [ INICIO, GOL, ACRESCIMO, SUBSTITUICAO, ADVERTENCIA, FIM ]
      description: Estados do Brasil

    TipoAdvertencia:
      type: string
      enum: [ INICIO, GOL, ACRESCIMO, SUBSTITUICAO, ADVERTENCIA, FIM ]
      description: Estados do Brasil
